{"version":3,"sources":["RollerCoasterDetail.js","AmusementParkDetail.js","RollerCoasterList.js","AmusementParkList.js","Nav.js","App.js","index.js"],"names":["RollerCoasterDetail","match","useState","rollerCoaster","setRollerCoaster","useEffect","fetchRollerCoaster","a","fetch","params","rollerCoasterName","amusementParkName","json","console","log","rateRollerCoaster","score","votes","method","body","JSON","stringify","headers","data","Number","toFixed","Rating","onChange","event","useStyles","makeStyles","RollerCoasterContainer","paddingTop","paddingLeft","paddingRight","cardMedia","margin","cardContent","textAlign","RollerCoasterList","API_URL","classes","rollerCoasterData","setRollerCoasterData","getRollerCoasterRating","fetchRollerCoasters","AppBar","position","Toolbar","Grid","container","spacing","className","map","item","xs","sm","Card","CardActionArea","component","Link","to","CardMedia","style","width","height","image","CardContent","Typography","Box","value","readOnly","precision","getRollerCoasterCard","CircularProgress","cardContainer","display","alignItems","AmusementParkContainer","AmusementParkList","amusementParks","setAmusementParks","fetchAmusementParks","amusementPark","AmusementPark","Nav","navStyle","color","Home","App","path","exact","AmusementParkDetail","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c789cb69.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport Rating from '@material-ui/lab/Rating';\r\n\r\nconst RollerCoasterDetail = ( {match} ) => {\r\n\r\n    const [rollerCoaster, setRollerCoaster] = useState({});\r\n\r\n    const getRollerCoasterRating = () => {\r\n        return rollerCoaster.votes === 0 ? \"No Rating\" :\r\n        Number(rollerCoaster.score/rollerCoaster.votes).toFixed(2) + \" / 5\"; \r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchRollerCoaster()\r\n    }, [])\r\n\r\n    const fetchRollerCoaster = async () => {\r\n        const fetchRollerCoaster = await fetch(\r\n            `http://localhost:8080/api/v1/roller-coasters?roller-coaster-name=${match.params.rollerCoasterName}&amusement-park-name=${match.params.amusementParkName}`\r\n            )\r\n        const rollerCoaster = await fetchRollerCoaster.json();\r\n        setRollerCoaster(rollerCoaster);\r\n        console.log(rollerCoaster);\r\n    }\r\n\r\n    const rateRollerCoaster = async (score) => {\r\n        rollerCoaster.score += score;\r\n        rollerCoaster.votes++;\r\n        const data = await fetch(`http://localhost:8080/api/v1/roller-coasters?roller-coaster-name=${match.params.rollerCoasterName}&amusement-park-name=${match.params.amusementParkName}`, {\r\n            method: 'PUT',\r\n            body: JSON.stringify(rollerCoaster),\r\n            headers: {\r\n                'content-type' : 'application/json'\r\n            }\r\n        })\r\n        console.log(data);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>{rollerCoaster.rollerCoasterName}</h1>\r\n            <h2>{rollerCoaster.amusementParkName}</h2>\r\n            <h3>{getRollerCoasterRating()}</h3>\r\n            <h3>{rollerCoaster.votes + \" total votes\"}</h3>\r\n\r\n            <Rating\r\n                onChange = {(event, score) => {\r\n                            rateRollerCoaster(score);\r\n                        }}\r\n            />\r\n\r\n        </div>\r\n        \r\n\r\n    )\r\n}\r\n\r\nexport default RollerCoasterDetail\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Link} from 'react-router-dom';\r\nimport {Box, AppBar, Toolbar, Grid, Card, CircularProgress, CardMedia, CardContent, Typography, CardActionArea} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Rating from '@material-ui/lab/Rating';\r\n\r\nconst useStyles = makeStyles({\r\n    RollerCoasterContainer: {\r\n        paddingTop: '20px',\r\n        paddingLeft: '50px',\r\n        paddingRight: '50px'\r\n    },\r\n    cardMedia: {\r\n        margin: \"auto\",\r\n    },\r\n    cardContent: {\r\n        textAlign: \"center\",\r\n    }\r\n})\r\n\r\n\r\nconst RollerCoasterList = ( {match} ) => {\r\n    const API_URL = `http://localhost:8080/api/v1/amusement-parks/?amusement-park-name=${match.params.amusementParkName}`\r\n    const classes = useStyles()\r\n    const [rollerCoasterData, setRollerCoasterData] = useState([]);\r\n\r\n    const getRollerCoasterRating = (rollerCoaster) => {\r\n        return rollerCoaster.votes === 0 ? 0 :\r\n        rollerCoaster.score/rollerCoaster.votes; \r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        fetchRollerCoasters();\r\n    }, [])\r\n\r\n    const fetchRollerCoasters = async () => {\r\n        const data = await fetch(API_URL);\r\n        const rollerCoasterData = await data.json();\r\n        console.log(rollerCoasterData)\r\n        setRollerCoasterData(rollerCoasterData);\r\n    }\r\n\r\n\r\n    const getRollerCoasterCard = (rollerCoaster) => {\r\n        return(\r\n            <Grid item xs={12} sm={4} key={rollerCoaster.rollerCoasterName}>\r\n                <Card>\r\n                    <CardActionArea component = {Link} to = {`/roller-coasters/${rollerCoaster.rollerCoasterName}/${rollerCoaster.amusementParkName}`}>\r\n                        <CardMedia\r\n                            className={classes.cardMedia}\r\n                            style={{ width: \"130px\", height: \"130px\"}}\r\n                            image=\"https://static.wikia.nocookie.net/logopedia/images/0/09/Incredicoaster.jpg/revision/latest/scale-to-width-down/933?cb=20190224114016\"\r\n                        />\r\n                        <CardContent className={classes.cardContent}>\r\n                            <Typography>{rollerCoaster.rollerCoasterName}</Typography>\r\n                            <Box>\r\n                                <Rating value = {Number(getRollerCoasterRating(rollerCoaster))} readOnly precision={0.1}/>\r\n                                <Box>{rollerCoaster.votes === 0 ? \"No Rating\" : Number(getRollerCoasterRating(rollerCoaster)).toFixed(2) + \" / 5\"}</Box>\r\n                            </Box>\r\n                            <Typography>{`${rollerCoaster.votes} votes`}</Typography>\r\n                        </CardContent>\r\n                    </CardActionArea>\r\n                </Card>\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <AppBar position=\"static\">\r\n                <Toolbar />\r\n            </AppBar>\r\n            {rollerCoasterData ? (\r\n            <Grid container spacing={1} className={classes.RollerCoasterContainer}>\r\n                {rollerCoasterData.map(\r\n                    (rollerCoaster) =>\r\n                    getRollerCoasterCard(rollerCoaster)\r\n            )}\r\n            </Grid>\r\n            ) : (\r\n                <CircularProgress/>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RollerCoasterList\r\n\r\n\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Link} from 'react-router-dom';\r\nimport {Box, AppBar, Toolbar, Grid, Card, CircularProgress, CardMedia, CardContent, Typography, CardActionArea} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Rating from '@material-ui/lab/Rating';\r\n\r\nconst useStyles = makeStyles({\r\n    RollerCoasterContainer: {\r\n        paddingTop: '20px',\r\n        paddingLeft: '50px',\r\n        paddingRight: '50px'\r\n    },\r\n    cardContainer:{\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    cardMedia: {\r\n        \r\n    },\r\n    cardContent: {\r\n    }\r\n})\r\n\r\n\r\nconst RollerCoasterList = () => {\r\n    const API_URL = `http://localhost:8080/api/v1/roller-coasters`\r\n    const classes = useStyles()\r\n    const [rollerCoasterData, setRollerCoasterData] = useState([]);\r\n\r\n    const getRollerCoasterRating = (rollerCoaster) => {\r\n        return rollerCoaster.votes === 0 ? 0 :\r\n        rollerCoaster.score/rollerCoaster.votes; \r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        fetchRollerCoasters();\r\n    }, [])\r\n\r\n    const fetchRollerCoasters = async () => {\r\n        const data = await fetch(API_URL);\r\n        const rollerCoasterData = await data.json();\r\n        console.log(rollerCoasterData)\r\n        setRollerCoasterData(rollerCoasterData);\r\n    }\r\n\r\n\r\n    const getRollerCoasterCard = (rollerCoaster) => {\r\n        return(\r\n            <Grid item xs={12} sm={12} key={rollerCoaster.rollerCoasterName}>\r\n                <Card>\r\n                    <CardActionArea component = {Link} to = {`/roller-coasters/${rollerCoaster.rollerCoasterName}/${rollerCoaster.amusementParkName}`}>\r\n                        <Box className={classes.cardContainer}>\r\n                            <CardMedia \r\n                                className={classes.cardMedia}\r\n                                style={{ width: \"130px\", height: \"130px\"}}\r\n                                image=\"https://static.wikia.nocookie.net/logopedia/images/0/09/Incredicoaster.jpg/revision/latest/scale-to-width-down/933?cb=20190224114016\"\r\n                            />\r\n                            <CardContent className={classes.cardContent}>\r\n                                <Typography>{rollerCoaster.rollerCoasterName}</Typography>\r\n                                <Box>\r\n                                    <Rating value = {Number(getRollerCoasterRating(rollerCoaster))} readOnly precision={0.1}/>\r\n                                    <Box>{rollerCoaster.votes === 0 ? \"No Rating\" : Number(getRollerCoasterRating(rollerCoaster)).toFixed(2) + \" / 5\"}</Box>\r\n                                </Box>\r\n                                <Typography>{`${rollerCoaster.votes} votes`}</Typography>\r\n                            </CardContent>\r\n                        </Box>\r\n                    </CardActionArea>\r\n                </Card>\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <AppBar position=\"static\">\r\n                <Toolbar />\r\n            </AppBar>\r\n            {rollerCoasterData ? (\r\n            <Grid container spacing={1} className={classes.RollerCoasterContainer}>\r\n                {rollerCoasterData.map(\r\n                    (rollerCoaster) =>\r\n                    getRollerCoasterCard(rollerCoaster)\r\n            )}\r\n            </Grid>\r\n            ) : (\r\n                <CircularProgress/>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RollerCoasterList\r\n\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Link} from 'react-router-dom';\r\nimport {AppBar, Toolbar, Grid, Card, CircularProgress, CardMedia, CardContent, Typography, CardActionArea} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Rating from '@material-ui/lab/Rating';\r\n\r\nconst useStyles = makeStyles({\r\n    AmusementParkContainer: {\r\n        paddingTop: '20px',\r\n        paddingLeft: '50px',\r\n        paddingRight: '50px'\r\n    }\r\n})\r\n\r\n\r\nconst AmusementParkList = () => {\r\n    const API_URL = \"http://localhost:8080/api/v1/amusement-parks\"\r\n    const classes = useStyles()\r\n    const [amusementParks, setAmusementParks] = useState([]);\r\n    \r\n\r\n\r\n    useEffect(() => {\r\n        fetchAmusementParks();\r\n    }, [])\r\n\r\n    const fetchAmusementParks = async () => {\r\n        const data = await fetch(API_URL);\r\n        const amusementParks = await data.json();\r\n        console.log(amusementParks);\r\n        setAmusementParks(amusementParks);\r\n    }\r\n\r\n    const getAmusementParkCard = (AmusementPark) => {\r\n        return(\r\n            <Grid item xs={12} sm={4} key={AmusementPark}>\r\n                <Card>\r\n                    <CardActionArea component = {Link} to = {`/amusement-parks/${AmusementPark}`}>\r\n                        <CardMedia\r\n                            style={{ width: \"130px\", height: \"130px\"}}\r\n                        />\r\n                        <CardContent>\r\n                            <Typography>{AmusementPark}</Typography>\r\n                        </CardContent>\r\n                    </CardActionArea>\r\n                </Card>\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <AppBar position=\"static\">\r\n                <Toolbar />\r\n            </AppBar>\r\n            {amusementParks ? (\r\n            <Grid container spacing={5} className={classes.AmusementParkContainer}>\r\n                {amusementParks.map(\r\n                    (amusementPark) =>\r\n                    getAmusementParkCard(amusementPark)\r\n            )}\r\n            </Grid>\r\n            ) : (\r\n                <CircularProgress/>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AmusementParkList\r\n","import './App.css';\r\nimport React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nfunction Nav() {\r\n\r\n    const navStyle = {\r\n        color: 'white'\r\n    }\r\n\r\n    return (\r\n      <nav>\r\n        <ul className=\"nav-links\">\r\n            <Link style = {navStyle} to='/' >\r\n                <li>Home</li>\r\n            </Link>\r\n            <Link style = {navStyle} to='/roller-coasters' >\r\n                <li>Roller Coasters</li>\r\n            </Link>\r\n            <Link style = {navStyle} to='/amusement-parks'>\r\n                <li>Amusement Parks</li>\r\n            </Link>\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n\r\n  export default Nav","import RollerCoasterDetail from './RollerCoasterDetail';\nimport AmusementParkDetail from './AmusementParkDetail';\nimport RollerCoasterList from './RollerCoasterList';\nimport AmusementParkList from './AmusementParkList';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport Nav from './Nav';\n\n\n\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Nav />\n        <Switch>\n          <Route path=\"/\" exact component={Home}/>\n          <Route path=\"/amusement-parks\" exact component={AmusementParkList}/>\n          <Route path=\"/roller-coasters\" exact component={RollerCoasterList}/>\n          <Route path=\"/amusement-parks/:amusementParkName\" exact component={AmusementParkDetail}/>\n          <Route path=\"/:roller-coasters/:rollerCoasterName/:amusementParkName\" exact component={RollerCoasterDetail}/>s\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nconst Home = () => (\n  <div>\n    <h1>Home Page</h1>\n  </div>\n)\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}