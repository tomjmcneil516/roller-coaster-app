{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tom\\\\IdeaProjects\\\\demo2\\\\src\\\\main\\\\frontend\\\\src\\\\RollerCoasterList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RollerCoasterList = () => {\n  _s();\n\n  const [rollerCoasterData, setRollerCoasterData] = useState([]);\n  useEffect(() => {\n    fetchRollerCoasters();\n  }, []);\n\n  const fetchRollerCoasters = async () => {\n    const data = await fetch(\"http://localhost:8080/api/v1/roller-coasters\");\n    const rollerCoasterData = await data.json();\n    setRollerCoasterData(rollerCoasterData);\n  };\n\n  const getRollerCoasterCard = rollerCoaster => {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n          component: Link,\n          to: `/roller-coasters/${rollerCoaster.rollerCoasterName}/${rollerCoaster.amusementParkName}`,\n          children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n            className: classes.cardMedia,\n            style: {\n              width: \"130px\",\n              height: \"130px\"\n            },\n            image: \"https://static.wikia.nocookie.net/logopedia/images/0/09/Incredicoaster.jpg/revision/latest/scale-to-width-down/933?cb=20190224114016\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            className: classes.cardContent,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              children: rollerCoaster.rollerCoasterName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              children: [/*#__PURE__*/_jsxDEV(Rating, {\n                value: Number(getRollerCoasterRating(rollerCoaster)),\n                readOnly: true,\n                precision: 0.1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                children: rollerCoaster.votes === 0 ? \"No Rating\" : Number(getRollerCoasterRating(rollerCoaster)).toFixed(2) + \" / 5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: `${rollerCoaster.votes} votes`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)\n    }, rollerCoaster.rollerCoasterName, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(AppBar, {\n        position: \"static\",\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), rollerCoasterData ? /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 1,\n        className: classes.RollerCoasterContainer,\n        children: rollerCoasterData.map(rollerCoaster => getRollerCoasterCard(rollerCoaster))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true), rollerCoasters.map(rollerCoaster => /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: `/roller-coasters/${rollerCoaster.rollerCoasterName}/${rollerCoaster.amusementParkName}`,\n        children: rollerCoaster.rollerCoasterName + ' - ' + rollerCoaster.amusementParkName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, rollerCoaster.amusementParkName + rollerCoaster.rollerCoasterName, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RollerCoasterList, \"DK+EtH5FwpMihNGbCNezJpqQprQ=\");\n\n_c = RollerCoasterList;\nexport default RollerCoasterList;\n\nvar _c;\n\n$RefreshReg$(_c, \"RollerCoasterList\");","map":{"version":3,"sources":["C:/Users/Tom/IdeaProjects/demo2/src/main/frontend/src/RollerCoasterList.js"],"names":["React","useState","useEffect","Link","RollerCoasterList","rollerCoasterData","setRollerCoasterData","fetchRollerCoasters","data","fetch","json","getRollerCoasterCard","rollerCoaster","rollerCoasterName","amusementParkName","classes","cardMedia","width","height","cardContent","Number","getRollerCoasterRating","votes","toFixed","RollerCoasterContainer","map","rollerCoasters"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,IAAR,QAAmB,kBAAnB;;;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAAA;;AAE5B,QAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4CL,QAAQ,CAAC,EAAD,CAA1D;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,mBAAmB;AACtB,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,mBAAmB,GAAG,YAAY;AACpC,UAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,8CAAD,CAAxB;AACA,UAAMJ,iBAAiB,GAAG,MAAMG,IAAI,CAACE,IAAL,EAAhC;AACAJ,IAAAA,oBAAoB,CAACD,iBAAD,CAApB;AACH,GAJD;;AAMA,QAAMM,oBAAoB,GAAIC,aAAD,IAAmB;AAC5C,wBACI,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAmB,MAAA,EAAE,EAAE,EAAvB;AAAA,6BACI,QAAC,IAAD;AAAA,+BACI,QAAC,cAAD;AAAgB,UAAA,SAAS,EAAIT,IAA7B;AAAmC,UAAA,EAAE,EAAK,oBAAmBS,aAAa,CAACC,iBAAkB,IAAGD,aAAa,CAACE,iBAAkB,EAAhI;AAAA,kCACI,QAAC,SAAD;AACI,YAAA,SAAS,EAAEC,OAAO,CAACC,SADvB;AAEI,YAAA,KAAK,EAAE;AAAEC,cAAAA,KAAK,EAAE,OAAT;AAAkBC,cAAAA,MAAM,EAAE;AAA1B,aAFX;AAGI,YAAA,KAAK,EAAC;AAHV;AAAA;AAAA;AAAA;AAAA,kBADJ,eAMI,QAAC,WAAD;AAAa,YAAA,SAAS,EAAEH,OAAO,CAACI,WAAhC;AAAA,oCACI,QAAC,UAAD;AAAA,wBAAaP,aAAa,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,GAAD;AAAA,sCACI,QAAC,MAAD;AAAQ,gBAAA,KAAK,EAAIO,MAAM,CAACC,sBAAsB,CAACT,aAAD,CAAvB,CAAvB;AAAgE,gBAAA,QAAQ,MAAxE;AAAyE,gBAAA,SAAS,EAAE;AAApF;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,GAAD;AAAA,0BAAMA,aAAa,CAACU,KAAd,KAAwB,CAAxB,GAA4B,WAA5B,GAA0CF,MAAM,CAACC,sBAAsB,CAACT,aAAD,CAAvB,CAAN,CAA8CW,OAA9C,CAAsD,CAAtD,IAA2D;AAA3G;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAMI,QAAC,UAAD;AAAA,wBAAc,GAAEX,aAAa,CAACU,KAAM;AAApC;AAAA;AAAA;AAAA;AAAA,oBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,OAAgCV,aAAa,CAACC,iBAA9C;AAAA;AAAA;AAAA;AAAA,YADJ;AAqBH,GAtBD;;AAyBA,sBACI;AAAA,4BACI;AAAA,8BACA,QAAC,MAAD;AAAQ,QAAA,QAAQ,EAAC,QAAjB;AAAA,+BACI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADA,EAICR,iBAAiB,gBAClB,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,CAAzB;AAA4B,QAAA,SAAS,EAAEU,OAAO,CAACS,sBAA/C;AAAA,kBACKnB,iBAAiB,CAACoB,GAAlB,CACIb,aAAD,IACAD,oBAAoB,CAACC,aAAD,CAFvB;AADL;AAAA;AAAA;AAAA;AAAA,cADkB,gBAQd,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA,oBADJ,EAgBKc,cAAc,CAACD,GAAf,CAAmBb,aAAa,iBACjC;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAG,oBAAmBA,aAAa,CAACC,iBAAkB,IAAGD,aAAa,CAACE,iBAAkB,EAAjG;AAAA,kBACKF,aAAa,CAACC,iBAAd,GAAkC,KAAlC,GAA0CD,aAAa,CAACE;AAD7D;AAAA;AAAA;AAAA;AAAA;AADJ,OAASF,aAAa,CAACE,iBAAd,GAAkCF,aAAa,CAACC,iBAAzD;AAAA;AAAA;AAAA;AAAA,YADC,CAhBL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH,CAhED;;GAAMT,iB;;KAAAA,iB;AAkEN,eAAeA,iBAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst RollerCoasterList = () => {\r\n\r\n    const [rollerCoasterData, setRollerCoasterData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetchRollerCoasters();\r\n    }, [])\r\n\r\n    const fetchRollerCoasters = async () => {\r\n        const data = await fetch(\"http://localhost:8080/api/v1/roller-coasters\");\r\n        const rollerCoasterData = await data.json();\r\n        setRollerCoasterData(rollerCoasterData);\r\n    }\r\n\r\n    const getRollerCoasterCard = (rollerCoaster) => {\r\n        return(\r\n            <Grid item xs={12} sm={12} key={rollerCoaster.rollerCoasterName}>\r\n                <Card>\r\n                    <CardActionArea component = {Link} to = {`/roller-coasters/${rollerCoaster.rollerCoasterName}/${rollerCoaster.amusementParkName}`}>\r\n                        <CardMedia\r\n                            className={classes.cardMedia}\r\n                            style={{ width: \"130px\", height: \"130px\"}}\r\n                            image=\"https://static.wikia.nocookie.net/logopedia/images/0/09/Incredicoaster.jpg/revision/latest/scale-to-width-down/933?cb=20190224114016\"\r\n                        />\r\n                        <CardContent className={classes.cardContent}>\r\n                            <Typography>{rollerCoaster.rollerCoasterName}</Typography>\r\n                            <Box>\r\n                                <Rating value = {Number(getRollerCoasterRating(rollerCoaster))} readOnly precision={0.1}></Rating>\r\n                                <Box>{rollerCoaster.votes === 0 ? \"No Rating\" : Number(getRollerCoasterRating(rollerCoaster)).toFixed(2) + \" / 5\"}</Box>\r\n                            </Box>\r\n                            <Typography>{`${rollerCoaster.votes} votes`}</Typography>\r\n                        </CardContent>\r\n                    </CardActionArea>\r\n                </Card>\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <>\r\n            <AppBar position=\"static\">\r\n                <Toolbar />\r\n            </AppBar>\r\n            {rollerCoasterData ? (\r\n            <Grid container spacing={1} className={classes.RollerCoasterContainer}>\r\n                {rollerCoasterData.map(\r\n                    (rollerCoaster) =>\r\n                    getRollerCoasterCard(rollerCoaster)\r\n            )}\r\n            </Grid>\r\n            ) : (\r\n                <CircularProgress/>\r\n            )}\r\n        </>\r\n            {rollerCoasters.map(rollerCoaster => (\r\n            <h1 key={rollerCoaster.amusementParkName + rollerCoaster.rollerCoasterName}>\r\n                <Link to={`/roller-coasters/${rollerCoaster.rollerCoasterName}/${rollerCoaster.amusementParkName}`}>\r\n                    {rollerCoaster.rollerCoasterName + ' - ' + rollerCoaster.amusementParkName}\r\n                </Link>\r\n            </h1>))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RollerCoasterList\r\n"]},"metadata":{},"sourceType":"module"}