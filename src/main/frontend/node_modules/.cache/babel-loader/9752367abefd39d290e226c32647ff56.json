{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tom\\\\IdeaProjects\\\\demo2\\\\src\\\\main\\\\frontend\\\\src\\\\RollerCoasterDetail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Rating from '@material-ui/lab/Rating';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RollerCoasterDetail = ({\n  match\n}) => {\n  _s();\n\n  const [rollerCoaster, setRollerCoaster] = useState({});\n  const [value, setValue] = useState();\n  useEffect(() => {\n    fetchRollerCoaster();\n  }, []);\n\n  const fetchRollerCoaster = async () => {\n    const fetchRollerCoaster = await fetch(`http://localhost:8080/api/v1/roller-coasters?roller-coaster-name=${match.params.rollerCoasterName}&amusement-park-name=${match.params.amusementParkName}`);\n    const rollerCoaster = await fetchRollerCoaster.json();\n    setRollerCoaster(rollerCoaster);\n    console.log(rollerCoaster);\n  };\n\n  const rateRollerCoaster = async score => {\n    rollerCoaster.score += score;\n    rollerCoaster.votes++;\n    const data = await fetch(`http://localhost:8080/api/v1/roller-coasters?roller-coaster-name=${match.params.rollerCoasterName}&amusement-park-name=${match.params.amusementParkName}`, {\n      method: 'PUT',\n      body: JSON.stringify(rollerCoaster),\n      headers: {\n        'content-type': 'application/json'\n      }\n    });\n    console.log(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: rollerCoaster.rollerCoasterName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: rollerCoaster.amusementParkName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: Number(rollerCoaster.rating).toFixed(2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: rollerCoaster.votes + \" total votes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Rating, {\n      value: value,\n      onChange: rateRollerCoaster(newValue)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RollerCoasterDetail, \"fu50NugKOlpuELv/Cs7OzSqQsXU=\");\n\n_c = RollerCoasterDetail;\nexport default RollerCoasterDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"RollerCoasterDetail\");","map":{"version":3,"sources":["C:/Users/Tom/IdeaProjects/demo2/src/main/frontend/src/RollerCoasterDetail.js"],"names":["React","useState","useEffect","Rating","RollerCoasterDetail","match","rollerCoaster","setRollerCoaster","value","setValue","fetchRollerCoaster","fetch","params","rollerCoasterName","amusementParkName","json","console","log","rateRollerCoaster","score","votes","data","method","body","JSON","stringify","headers","Number","rating","toFixed","newValue"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;;;AAEA,MAAMC,mBAAmB,GAAG,CAAE;AAACC,EAAAA;AAAD,CAAF,KAAe;AAAA;;AAEvC,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,EAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,kBAAkB;AACrB,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,kBAAkB,GAAG,YAAY;AACnC,UAAMA,kBAAkB,GAAG,MAAMC,KAAK,CACjC,oEAAmEN,KAAK,CAACO,MAAN,CAAaC,iBAAkB,wBAAuBR,KAAK,CAACO,MAAN,CAAaE,iBAAkB,EADvH,CAAtC;AAGA,UAAMR,aAAa,GAAG,MAAMI,kBAAkB,CAACK,IAAnB,EAA5B;AACAR,IAAAA,gBAAgB,CAACD,aAAD,CAAhB;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAYX,aAAZ;AACH,GAPD;;AASA,QAAMY,iBAAiB,GAAG,MAAOC,KAAP,IAAiB;AACvCb,IAAAA,aAAa,CAACa,KAAd,IAAuBA,KAAvB;AACAb,IAAAA,aAAa,CAACc,KAAd;AAEA,UAAMC,IAAI,GAAG,MAAMV,KAAK,CAAE,oEAAmEN,KAAK,CAACO,MAAN,CAAaC,iBAAkB,wBAAuBR,KAAK,CAACO,MAAN,CAAaE,iBAAkB,EAA1J,EAA6J;AACjLQ,MAAAA,MAAM,EAAE,KADyK;AAEjLC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAenB,aAAf,CAF2K;AAGjLoB,MAAAA,OAAO,EAAE;AACL,wBAAiB;AADZ;AAHwK,KAA7J,CAAxB;AAOAV,IAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ;AACH,GAZD;;AAcA,sBACI;AAAA,4BACI;AAAA,gBAAKf,aAAa,CAACO;AAAnB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBAAKP,aAAa,CAACQ;AAAnB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,gBAAKa,MAAM,CAACrB,aAAa,CAACsB,MAAf,CAAN,CAA6BC,OAA7B,CAAqC,CAArC;AAAL;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAA,gBAAKvB,aAAa,CAACc,KAAd,GAAsB;AAA3B;AAAA;AAAA;AAAA;AAAA,YAJJ,eAMI,QAAC,MAAD;AACI,MAAA,KAAK,EAAIZ,KADb;AAEI,MAAA,QAAQ,EAAIU,iBAAiB,CAACY,QAAD;AAFjC;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CAhDD;;GAAM1B,mB;;KAAAA,mB;AAkDN,eAAeA,mBAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport Rating from '@material-ui/lab/Rating';\r\n\r\nconst RollerCoasterDetail = ( {match} ) => {\r\n\r\n    const [rollerCoaster, setRollerCoaster] = useState({});\r\n    const [value, setValue] = useState();\r\n\r\n    useEffect(() => {\r\n        fetchRollerCoaster()\r\n    }, [])\r\n\r\n    const fetchRollerCoaster = async () => {\r\n        const fetchRollerCoaster = await fetch(\r\n            `http://localhost:8080/api/v1/roller-coasters?roller-coaster-name=${match.params.rollerCoasterName}&amusement-park-name=${match.params.amusementParkName}`\r\n            )\r\n        const rollerCoaster = await fetchRollerCoaster.json();\r\n        setRollerCoaster(rollerCoaster);\r\n        console.log(rollerCoaster);\r\n    }\r\n\r\n    const rateRollerCoaster = async (score) => {\r\n        rollerCoaster.score += score;\r\n        rollerCoaster.votes++;\r\n\r\n        const data = await fetch(`http://localhost:8080/api/v1/roller-coasters?roller-coaster-name=${match.params.rollerCoasterName}&amusement-park-name=${match.params.amusementParkName}`, {\r\n            method: 'PUT',\r\n            body: JSON.stringify(rollerCoaster),\r\n            headers: {\r\n                'content-type' : 'application/json'\r\n            }\r\n        })\r\n        console.log(data);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>{rollerCoaster.rollerCoasterName}</h1>\r\n            <h2>{rollerCoaster.amusementParkName}</h2>\r\n            <h3>{Number(rollerCoaster.rating).toFixed(2)}</h3>\r\n            <h3>{rollerCoaster.votes + \" total votes\"}</h3>\r\n\r\n            <Rating\r\n                value = {value}\r\n                onChange = {rateRollerCoaster(newValue)}\r\n            />\r\n\r\n        </div>\r\n        \r\n\r\n    )\r\n}\r\n\r\nexport default RollerCoasterDetail\r\n"]},"metadata":{},"sourceType":"module"}