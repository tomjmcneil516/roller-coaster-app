{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/Tom/IdeaProjects/demo2/src/main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/Tom/IdeaProjects/demo2/src/main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/Tom/IdeaProjects/demo2/src/main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Link}from'react-router-dom';import{AppBar,Toolbar,Grid,Card,CircularProgress,CardMedia,CardContent,Typography,CardActionArea}from\"@material-ui/core\";import{makeStyles}from\"@material-ui/core/styles\";import Rating from'@material-ui/lab/Rating';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var useStyles=makeStyles({AmusementParkContainer:{paddingTop:'20px',paddingLeft:'50px',paddingRight:'50px'}});var AmusementParkList=function AmusementParkList(){var API_URL=\"http://localhost:8080/api/v1/amusement-parks\";var classes=useStyles();var _useState=useState([]),_useState2=_slicedToArray(_useState,2),amusementParks=_useState2[0],setAmusementParks=_useState2[1];useEffect(function(){fetchAmusementParks();},[]);var fetchAmusementParks=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var data,amusementParks;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(API_URL);case 2:data=_context.sent;_context.next=5;return data.json();case 5:amusementParks=_context.sent;console.log(amusementParks);setAmusementParks(amusementParks);case 8:case\"end\":return _context.stop();}}},_callee);}));return function fetchAmusementParks(){return _ref.apply(this,arguments);};}();var getAmusementParkCard=function getAmusementParkCard(AmusementPark){return/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:4,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardActionArea,{component:Link,to:\"/amusement-parks/\".concat(AmusementPark),children:[/*#__PURE__*/_jsx(CardMedia,{style:{width:\"130px\",height:\"130px\"}}),/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsx(Typography,{children:AmusementPark})})]})})},AmusementPark);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(AppBar,{position:\"static\",children:/*#__PURE__*/_jsx(Toolbar,{})}),amusementParks?/*#__PURE__*/_jsx(Grid,{container:true,spacing:5,className:classes.AmusementParkContainer,children:amusementParks.map(function(amusementPark){return getAmusementParkCard(amusementPark);})}):/*#__PURE__*/_jsx(CircularProgress,{})]});};export default AmusementParkList;","map":{"version":3,"sources":["C:/Users/Tom/IdeaProjects/demo2/src/main/frontend/src/AmusementParkList.js"],"names":["React","useState","useEffect","Link","AppBar","Toolbar","Grid","Card","CircularProgress","CardMedia","CardContent","Typography","CardActionArea","makeStyles","Rating","useStyles","AmusementParkContainer","paddingTop","paddingLeft","paddingRight","AmusementParkList","API_URL","classes","amusementParks","setAmusementParks","fetchAmusementParks","fetch","data","json","console","log","getAmusementParkCard","AmusementPark","width","height","map","amusementPark"],"mappings":"qfAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,KAAyC,OAAzC,CACA,OAAQC,IAAR,KAAmB,kBAAnB,CACA,OAAQC,MAAR,CAAgBC,OAAhB,CAAyBC,IAAzB,CAA+BC,IAA/B,CAAqCC,gBAArC,CAAuDC,SAAvD,CAAkEC,WAAlE,CAA+EC,UAA/E,CAA2FC,cAA3F,KAAgH,mBAAhH,CACA,OAAQC,UAAR,KAAyB,0BAAzB,CACA,MAAOC,CAAAA,MAAP,KAAmB,yBAAnB,C,6IAEA,GAAMC,CAAAA,SAAS,CAAGF,UAAU,CAAC,CACzBG,sBAAsB,CAAE,CACpBC,UAAU,CAAE,MADQ,CAEpBC,WAAW,CAAE,MAFO,CAGpBC,YAAY,CAAE,MAHM,CADC,CAAD,CAA5B,CASA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CAC5B,GAAMC,CAAAA,OAAO,CAAG,8CAAhB,CACA,GAAMC,CAAAA,OAAO,CAAGP,SAAS,EAAzB,CACA,cAA4Cd,QAAQ,CAAC,EAAD,CAApD,wCAAOsB,cAAP,eAAuBC,iBAAvB,eAIAtB,SAAS,CAAC,UAAM,CACZuB,mBAAmB,GACtB,CAFQ,CAEN,EAFM,CAAT,CAIA,GAAMA,CAAAA,mBAAmB,0FAAG,iLACLC,CAAAA,KAAK,CAACL,OAAD,CADA,QAClBM,IADkB,qCAEKA,CAAAA,IAAI,CAACC,IAAL,EAFL,QAElBL,cAFkB,eAGxBM,OAAO,CAACC,GAAR,CAAYP,cAAZ,EACAC,iBAAiB,CAACD,cAAD,CAAjB,CAJwB,sDAAH,kBAAnBE,CAAAA,mBAAmB,0CAAzB,CAOA,GAAMM,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAACC,aAAD,CAAmB,CAC5C,mBACI,KAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,CAAmB,EAAE,CAAE,CAAvB,uBACI,KAAC,IAAD,wBACI,MAAC,cAAD,EAAgB,SAAS,CAAI7B,IAA7B,CAAmC,EAAE,4BAAwB6B,aAAxB,CAArC,wBACI,KAAC,SAAD,EACI,KAAK,CAAE,CAAEC,KAAK,CAAE,OAAT,CAAkBC,MAAM,CAAE,OAA1B,CADX,EADJ,cAII,KAAC,WAAD,wBACI,KAAC,UAAD,WAAaF,aAAb,EADJ,EAJJ,GADJ,EADJ,EAA+BA,aAA/B,CADJ,CAcH,CAfD,CAoBA,mBACI,wCACI,KAAC,MAAD,EAAQ,QAAQ,CAAC,QAAjB,uBACI,KAAC,OAAD,IADJ,EADJ,CAIKT,cAAc,cACf,KAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,OAAO,CAAE,CAAzB,CAA4B,SAAS,CAAED,OAAO,CAACN,sBAA/C,UACKO,cAAc,CAACY,GAAf,CACG,SAACC,aAAD,QACAL,CAAAA,oBAAoB,CAACK,aAAD,CADpB,EADH,CADL,EADe,cAQX,KAAC,gBAAD,IAZR,GADJ,CAiBH,CAvDD,CAyDA,cAAehB,CAAAA,iBAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport {Link} from 'react-router-dom';\r\nimport {AppBar, Toolbar, Grid, Card, CircularProgress, CardMedia, CardContent, Typography, CardActionArea} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Rating from '@material-ui/lab/Rating';\r\n\r\nconst useStyles = makeStyles({\r\n    AmusementParkContainer: {\r\n        paddingTop: '20px',\r\n        paddingLeft: '50px',\r\n        paddingRight: '50px'\r\n    }\r\n})\r\n\r\n\r\nconst AmusementParkList = () => {\r\n    const API_URL = \"http://localhost:8080/api/v1/amusement-parks\"\r\n    const classes = useStyles()\r\n    const [amusementParks, setAmusementParks] = useState([]);\r\n    \r\n\r\n\r\n    useEffect(() => {\r\n        fetchAmusementParks();\r\n    }, [])\r\n\r\n    const fetchAmusementParks = async () => {\r\n        const data = await fetch(API_URL);\r\n        const amusementParks = await data.json();\r\n        console.log(amusementParks);\r\n        setAmusementParks(amusementParks);\r\n    }\r\n\r\n    const getAmusementParkCard = (AmusementPark) => {\r\n        return(\r\n            <Grid item xs={12} sm={4} key={AmusementPark}>\r\n                <Card>\r\n                    <CardActionArea component = {Link} to = {`/amusement-parks/${AmusementPark}`}>\r\n                        <CardMedia\r\n                            style={{ width: \"130px\", height: \"130px\"}}\r\n                        />\r\n                        <CardContent>\r\n                            <Typography>{AmusementPark}</Typography>\r\n                        </CardContent>\r\n                    </CardActionArea>\r\n                </Card>\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <AppBar position=\"static\">\r\n                <Toolbar />\r\n            </AppBar>\r\n            {amusementParks ? (\r\n            <Grid container spacing={5} className={classes.AmusementParkContainer}>\r\n                {amusementParks.map(\r\n                    (amusementPark) =>\r\n                    getAmusementParkCard(amusementPark)\r\n            )}\r\n            </Grid>\r\n            ) : (\r\n                <CircularProgress/>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AmusementParkList\r\n"]},"metadata":{},"sourceType":"module"}