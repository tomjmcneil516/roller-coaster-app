{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/Tom/IdeaProjects/demo2/src/main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/Tom/IdeaProjects/demo2/src/main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/Tom/IdeaProjects/demo2/src/main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import Rating from'@material-ui/lab/Rating';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var RollerCoasterDetail=function RollerCoasterDetail(_ref){var match=_ref.match;var _useState=useState({}),_useState2=_slicedToArray(_useState,2),rollerCoaster=_useState2[0],setRollerCoaster=_useState2[1];var getRollerCoasterRating=function getRollerCoasterRating(){return rollerCoaster.votes===0?\"No Rating\":Number(rollerCoaster.score/rollerCoaster.votes).toFixed(2)+\" / 5\";};useEffect(function(){fetchRollerCoaster();},[]);var fetchRollerCoaster=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var fetchRollerCoaster,rollerCoaster;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"http://localhost:8080/api/v1/roller-coasters?roller-coaster-name=\".concat(match.params.rollerCoasterName,\"&amusement-park-name=\").concat(match.params.amusementParkName));case 2:fetchRollerCoaster=_context.sent;_context.next=5;return fetchRollerCoaster.json();case 5:rollerCoaster=_context.sent;setRollerCoaster(rollerCoaster);console.log(rollerCoaster);case 8:case\"end\":return _context.stop();}}},_callee);}));return function fetchRollerCoaster(){return _ref2.apply(this,arguments);};}();var rateRollerCoaster=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(score){var data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:rollerCoaster.score+=score;rollerCoaster.votes++;_context2.next=4;return fetch(\"http://localhost:8080/api/v1/roller-coasters?roller-coaster-name=\".concat(match.params.rollerCoasterName,\"&amusement-park-name=\").concat(match.params.amusementParkName),{method:'PUT',body:JSON.stringify(rollerCoaster),headers:{'content-type':'application/json'}});case 4:data=_context2.sent;console.log(data);case 6:case\"end\":return _context2.stop();}}},_callee2);}));return function rateRollerCoaster(_x){return _ref3.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:rollerCoaster.rollerCoasterName}),/*#__PURE__*/_jsx(\"h2\",{children:rollerCoaster.amusementParkName}),/*#__PURE__*/_jsx(\"h3\",{children:getRollerCoasterRating()}),/*#__PURE__*/_jsx(\"h3\",{children:rollerCoaster.votes+\" total votes\"}),/*#__PURE__*/_jsx(Rating,{onChange:function onChange(event,score){rateRollerCoaster(score);}})]});};export default RollerCoasterDetail;","map":{"version":3,"sources":["C:/Users/Tom/IdeaProjects/demo2/src/main/frontend/src/RollerCoasterDetail.js"],"names":["React","useState","useEffect","Rating","RollerCoasterDetail","match","rollerCoaster","setRollerCoaster","getRollerCoasterRating","votes","Number","score","toFixed","fetchRollerCoaster","fetch","params","rollerCoasterName","amusementParkName","json","console","log","rateRollerCoaster","method","body","JSON","stringify","headers","data","event"],"mappings":"qfAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,KAAyC,OAAzC,CACA,MAAOC,CAAAA,MAAP,KAAmB,yBAAnB,C,wFAEA,GAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,MAAe,IAAZC,CAAAA,KAAY,MAAZA,KAAY,CAEvC,cAA0CJ,QAAQ,CAAC,EAAD,CAAlD,wCAAOK,aAAP,eAAsBC,gBAAtB,eAEA,GAAMC,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,EAAM,CACjC,MAAOF,CAAAA,aAAa,CAACG,KAAd,GAAwB,CAAxB,CAA4B,WAA5B,CACPC,MAAM,CAACJ,aAAa,CAACK,KAAd,CAAoBL,aAAa,CAACG,KAAnC,CAAN,CAAgDG,OAAhD,CAAwD,CAAxD,EAA6D,MAD7D,CAEH,CAHD,CAKAV,SAAS,CAAC,UAAM,CACZW,kBAAkB,GACrB,CAFQ,CAEN,EAFM,CAAT,CAIA,GAAMA,CAAAA,kBAAkB,2FAAG,8LACUC,CAAAA,KAAK,4EACkCT,KAAK,CAACU,MAAN,CAAaC,iBAD/C,iCACwFX,KAAK,CAACU,MAAN,CAAaE,iBADrG,EADf,QACjBJ,kBADiB,qCAIKA,CAAAA,kBAAkB,CAACK,IAAnB,EAJL,QAIjBZ,aAJiB,eAKvBC,gBAAgB,CAACD,aAAD,CAAhB,CACAa,OAAO,CAACC,GAAR,CAAYd,aAAZ,EANuB,sDAAH,gFAAxB,CASA,GAAMe,CAAAA,iBAAiB,2FAAG,kBAAOV,KAAP,+HACtBL,aAAa,CAACK,KAAd,EAAuBA,KAAvB,CACAL,aAAa,CAACG,KAAd,GAFsB,uBAGHK,CAAAA,KAAK,4EAAqET,KAAK,CAACU,MAAN,CAAaC,iBAAlF,iCAA2HX,KAAK,CAACU,MAAN,CAAaE,iBAAxI,EAA6J,CACjLK,MAAM,CAAE,KADyK,CAEjLC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAenB,aAAf,CAF2K,CAGjLoB,OAAO,CAAE,CACL,eAAiB,kBADZ,CAHwK,CAA7J,CAHF,QAGhBC,IAHgB,gBAUtBR,OAAO,CAACC,GAAR,CAAYO,IAAZ,EAVsB,wDAAH,kBAAjBN,CAAAA,iBAAiB,6CAAvB,CAaA,mBACI,oCACI,oBAAKf,aAAa,CAACU,iBAAnB,EADJ,cAEI,oBAAKV,aAAa,CAACW,iBAAnB,EAFJ,cAGI,oBAAKT,sBAAsB,EAA3B,EAHJ,cAII,oBAAKF,aAAa,CAACG,KAAd,CAAsB,cAA3B,EAJJ,cAMI,KAAC,MAAD,EACI,QAAQ,CAAI,kBAACmB,KAAD,CAAQjB,KAAR,CAAkB,CAClBU,iBAAiB,CAACV,KAAD,CAAjB,CACH,CAHb,EANJ,GADJ,CAiBH,CApDD,CAsDA,cAAeP,CAAAA,mBAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport Rating from '@material-ui/lab/Rating';\r\n\r\nconst RollerCoasterDetail = ( {match} ) => {\r\n\r\n    const [rollerCoaster, setRollerCoaster] = useState({});\r\n\r\n    const getRollerCoasterRating = () => {\r\n        return rollerCoaster.votes === 0 ? \"No Rating\" :\r\n        Number(rollerCoaster.score/rollerCoaster.votes).toFixed(2) + \" / 5\"; \r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchRollerCoaster()\r\n    }, [])\r\n\r\n    const fetchRollerCoaster = async () => {\r\n        const fetchRollerCoaster = await fetch(\r\n            `http://localhost:8080/api/v1/roller-coasters?roller-coaster-name=${match.params.rollerCoasterName}&amusement-park-name=${match.params.amusementParkName}`\r\n            )\r\n        const rollerCoaster = await fetchRollerCoaster.json();\r\n        setRollerCoaster(rollerCoaster);\r\n        console.log(rollerCoaster);\r\n    }\r\n\r\n    const rateRollerCoaster = async (score) => {\r\n        rollerCoaster.score += score;\r\n        rollerCoaster.votes++;\r\n        const data = await fetch(`http://localhost:8080/api/v1/roller-coasters?roller-coaster-name=${match.params.rollerCoasterName}&amusement-park-name=${match.params.amusementParkName}`, {\r\n            method: 'PUT',\r\n            body: JSON.stringify(rollerCoaster),\r\n            headers: {\r\n                'content-type' : 'application/json'\r\n            }\r\n        })\r\n        console.log(data);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>{rollerCoaster.rollerCoasterName}</h1>\r\n            <h2>{rollerCoaster.amusementParkName}</h2>\r\n            <h3>{getRollerCoasterRating()}</h3>\r\n            <h3>{rollerCoaster.votes + \" total votes\"}</h3>\r\n\r\n            <Rating\r\n                onChange = {(event, score) => {\r\n                            rateRollerCoaster(score);\r\n                        }}\r\n            />\r\n\r\n        </div>\r\n        \r\n\r\n    )\r\n}\r\n\r\nexport default RollerCoasterDetail\r\n"]},"metadata":{},"sourceType":"module"}