{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tom\\\\IdeaProjects\\\\demo2\\\\src\\\\main\\\\frontend\\\\src\\\\AmusementParkDetail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { AppBar, Toolbar, Grid, Card, CircularProgress, CardMedia, CardContent, Typography, CardActionArea } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  RollerCoasterContainer: {\n    paddingTop: '20px',\n    paddingLeft: '50px',\n    paddingRight: '50px'\n  }\n});\n\nconst RollerCoasterList = ({\n  match\n}, props) => {\n  _s();\n\n  const {\n    history\n  } = props;\n  const API_URL = `http://localhost:8080/api/v1/amusement-parks/?amusement-park-name=${match.params.amusementParkName}`;\n  const classes = useStyles();\n  const [rollerCoasterData, setRollerCoasterData] = useState([]);\n  useEffect(() => {\n    fetchRollerCoasters();\n  }, []);\n\n  const fetchRollerCoasters = async () => {\n    const data = await fetch(API_URL);\n    const response = await data.json();\n    setRollerCoasterData(response);\n  };\n\n  const getRollerCoasterCard = rollerCoasterID => {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n          component: Link,\n          to: `/roller-coasters/${rollerCoasterData.rollerCoasterName}/${rollerCoasterData.amusementParkName}`,\n          children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n            style: {\n              width: \"130px\",\n              height: \"130px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: \"hello\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, rollerCoasterID, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), rollerCoasterData ? /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 5,\n      className: classes.RollerCoasterContainer,\n      children: Object.keys(rollerCoasterData).map(rollerCoasterName => getRollerCoasterCard(rollerCoasterName))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_s(RollerCoasterList, \"jtyGjmigZ3w1SP/H09dTD6cF2EQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = RollerCoasterList;\nexport default RollerCoasterList;\n\nvar _c;\n\n$RefreshReg$(_c, \"RollerCoasterList\");","map":{"version":3,"sources":["C:/Users/Tom/IdeaProjects/demo2/src/main/frontend/src/AmusementParkDetail.js"],"names":["React","useState","useEffect","Link","AppBar","Toolbar","Grid","Card","CircularProgress","CardMedia","CardContent","Typography","CardActionArea","makeStyles","useStyles","RollerCoasterContainer","paddingTop","paddingLeft","paddingRight","RollerCoasterList","match","props","history","API_URL","params","amusementParkName","classes","rollerCoasterData","setRollerCoasterData","fetchRollerCoasters","data","fetch","response","json","getRollerCoasterCard","rollerCoasterID","rollerCoasterName","width","height","Object","keys","map"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport {Link} from 'react-router-dom';\r\nimport {AppBar, Toolbar, Grid, Card, CircularProgress, CardMedia, CardContent, Typography, CardActionArea} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n    RollerCoasterContainer: {\r\n        paddingTop: '20px',\r\n        paddingLeft: '50px',\r\n        paddingRight: '50px'\r\n    }\r\n})\r\n\r\n\r\nconst RollerCoasterList = ( {match}, props ) => {\r\n    const {history} = props\r\n    const API_URL = `http://localhost:8080/api/v1/amusement-parks/?amusement-park-name=${match.params.amusementParkName}`\r\n    const classes = useStyles()\r\n    const [rollerCoasterData, setRollerCoasterData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetchRollerCoasters();\r\n    }, [])\r\n\r\n    const fetchRollerCoasters = async () => {\r\n        const data = await fetch(API_URL);\r\n        const response = await data.json();\r\n        setRollerCoasterData(response);\r\n    }\r\n\r\n\r\n    const getRollerCoasterCard = (rollerCoasterID) => {\r\n        return(\r\n            <Grid item xs={12} sm={4} key={rollerCoasterID}>\r\n                <Card>\r\n                    <CardActionArea component = {Link} to = {`/roller-coasters/${rollerCoasterData.rollerCoasterName}/${rollerCoasterData.amusementParkName}`}>\r\n                        <CardMedia\r\n                            style={{ width: \"130px\", height: \"130px\"}}\r\n                        />\r\n                        <CardContent>\r\n                        <Typography>hello</Typography>\r\n                        </CardContent>\r\n                    </CardActionArea>\r\n                </Card>\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <AppBar position=\"static\">\r\n                <Toolbar />\r\n            </AppBar>\r\n            {rollerCoasterData ? (\r\n            <Grid container spacing={5} className={classes.RollerCoasterContainer}>\r\n                {Object.keys(rollerCoasterData).map(\r\n                    (rollerCoasterName) =>\r\n                    getRollerCoasterCard(rollerCoasterName)\r\n            )}\r\n            </Grid>\r\n            ) : (\r\n                <CircularProgress/>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RollerCoasterList\r\n"]},"metadata":{},"sourceType":"module"}